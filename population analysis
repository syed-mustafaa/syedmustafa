import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error

# Load population data..
population_data = pd.read_csv('population_data.csv')

# Data preprocessing..
population_data['Year'] = pd.to_datetime(population_data['Year'], format='%Y')
population_data.set_index('Year', inplace=True)

# Plotting population over time
plt.figure(figsize=(10, 6))
plt.plot(population_data.index, population_data['Population'], marker='o', color='b')
plt.title('Population Over Time')
plt.xlabel('Year')
plt.ylabel('Population')
plt.grid(True)
plt.show()

# Feature engineering - adding additional features..
population_data['Year'] = population_data.index.year
population_data['Month'] = population_data.index.month

# Splitting data into training and testing sets
X = population_data[['Year', 'Month']]
y = population_data['Population']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model training - Random Forest Regression
rf_model = RandomForestRegressor(n_estimators=100, random_state=42)
rf_model.fit(X_train, y_train)

# Model evaluation
predictions = rf_model.predict(X_test)
mse = mean_squared_error(y_test, predictions)
print("Mean Squared Error:", mse)

# Forecasting population for the next 5 years..
future_years = pd.date_range(start=population_data.index[-1], periods=5, freq='Y').year
future_months = [1] * 5  # Assuming January for simplicity
future_data = pd.DataFrame({'Year': future_years, 'Month': future_months})
future_predictions = rf_model.predict(future_data)

# Plotting actual vs predicted population..
plt.figure(figsize=(10, 6))
plt.plot(population_data.index, population_data['Population'], marker='o', color='b', label='Actual')
plt.plot(X_test.index, predictions, marker='o', color='r', linestyle='dashed', label='Predicted')
plt.plot(future_data['Year'], future_predictions, marker='o', color='g', linestyle='dashed', label='Future Prediction')
plt.title('Population Prediction')
plt.xlabel('Year')
plt.ylabel('Population')
plt.legend()
plt.grid(True)
plt.show()
